%%%%%%%%%%%%%%%
% Translation %
%%%%%%%%%%%%%%%

%% Allow to use different languages in the same document and only print the right one in the PDF.
%% Automatically provides the babel package.
%%
%% Create commands for each used language :
%
% \usepackage[british,french]{translation}
% \french{Traduction}
% \british{Translation}
%
%% It's possible to create alias to another language :
%
% \usepackage[british]{translation}
% \translationAlias{english}{british} %% Enable the \english command
% \english{Translation}
%
%% To select the current language :
%
% \usepackage[british,french]{translation}
% \translation{french} %% Will print the document with french translations
% \french{Traduction}
% \british{Translation}
%

%% Each language comes with a variable langageName@name (french@name for example)
%% This variable contains the language name used by babel internally
%% It is useful to have a language which points to a specific babel languageName
%% in particular when \translationAlias is used :
%
% \usepackage[british,french]{translation}
% \translationAlias{english}{british} \translationAlias{english}{british}
%
% \french@name  %french
% \british@name %british
% \english@name %british
%

\ProvidesPackage{translation}

%% Select document language.
%% This will also disable other languages.
%
% \translation{french} %% Will print the document with french translations
%
\newcommand{\translation}[1]{
	\edef\@temp{\csname#1@name\endcsname}
	\AtBeginDocument{
	\expandafter\expandafter \expandafter\selectlanguage
		\expandafter\csname
			\csname#1@name\endcsname
		\expandafter\endcsname
	}
}

%% Create an alias of the second argument named with the first argument
%
% \translationAlias{english}{british} %% Enable the \english command calling \british
%
\newcommand{\translationAlias}[2]{
	%% Define the name corresponding to the aliased language (the original name)
	\expandafter\edef\csname#1@name\endcsname{\csname#2@name\endcsname}
	%% Define the command corresponding to the aliased language (the original name)
	\expandafter\newcommand\expandafter{\csname#1\endcsname}[1]{\expandafter{\csname#2\endcsname{##1}}}
}

%% Create a command for each available language in the document
%
% \usepackage[british,french]{translation}
% \french{Traduction}
% \british{Translation}
%
\DeclareOption*{
	%% Add the option as a "babel" language
	\PassOptionsToPackage{\CurrentOption}{babel}
	\edef\@currentLanguage{\CurrentOption}

	%% Define the name corresponding to the current language (french, british, ...)
	\expandafter\edef\csname\CurrentOption @name\endcsname{\expandafter\CurrentOption}
	%% Define the command corresponding to the current language (\french, \british, ...)
	\expandafter\edef\csname\CurrentOption\endcsname#1{%
		\noexpand\iflanguage{\expandafter\CurrentOption}{#1}{}%
	}%
}
\ProcessOptions*
\ifx\@currentLanguage\@undefined
	\PackageError{translation}{%
		You haven't specified a language option}{%
		You need to specify a language, either as a global option\MessageBreak
		or as an optional argument to the \string\usepackage\space command; \MessageBreak
		You shouldn't try to proceed from here, type x to quit.
	}
\fi

\RequirePackage{babel}
\AtBeginDocument{
\translation{\@currentLanguage}
}
